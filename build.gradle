plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.avast.gradle.docker-compose' version '0.10.7'
    id 'java'
    id 'idea'
    id 'eclipse-wtp'
}

group = 'org.woehlke.bloodmoney'
version = '1.3-SNAPSHOT'
sourceCompatibility = '13'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    jacksonDatabindVersion = '2.9.8' //2.10.2
    lombokVersion = '1.18.12'
    log4j2Version = '2.13.0'
    log4j12Version = '1.2.17'
    junitVersion = '5.6.0'
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-jta-atomikos'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-configuration-metadata'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    //implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework:spring-aspects'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.thymeleaf:thymeleaf-spring5'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time'
    implementation 'com.github.mxab.thymeleaf.extras:thymeleaf-extras-data-attribute'
    implementation 'io.github.jpenren:thymeleaf-spring-data-dialect:3.4.0'
    implementation 'org.webjars:jquery:3.4.1'
    implementation 'org.webjars:popper.js:1.16.0'
    implementation 'org.webjars:bootstrap:4.4.1'
    implementation 'org.webjars:font-awesome:5.12.0'
    implementation 'org.jsoup:jsoup:1.12.1'
    implementation 'com.opencsv:opencsv:5.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.projectlombok:lombok'
    testImplementation "junit:junit:4.13"
    testImplementation 'org.junit.jupiter:junit-jupiter:'+junitVersion
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:"+junitVersion
    testRuntimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
    testRuntimeOnly 'com.h2database:h2'
    testRuntimeOnly 'org.postgresql:postgresql'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

springBoot {
    buildInfo()
}


task bootRunDefault {
    bootRun.configure {
        systemProperty "spring.profiles.active", 'default'
    }
}

task bootRunHeroku {
    bootRun.configure {
        systemProperty "spring.profiles.active", 'heroku'
    }
}

bootRunDefault.finalizedBy bootRun
bootRunHeroku.finalizedBy bootRun

dockerCompose {
    useComposeFiles = ['src/test/docker/stack.yml']
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

